{"ast":null,"code":"const {\n  REACT_APP_API\n} = process.env;\n\n/*\r\n    Méthodes de fetch\r\n*/\n\nexport const fetchJson = async url => {\n  let responseJson;\n  await fetch(url, {\n    credentials: \"include\",\n    mode: \"cors\"\n  }).then(response => response.json()).then(htmlResponse => responseJson = htmlResponse);\n  return responseJson;\n};\nexport const fetchPost = async (url, body) => {\n  const postRequest = {\n    method: 'POST',\n    credentials: \"include\",\n    mode: \"cors\",\n    headers: {\n      'Content-Type': 'application/json',\n      'Allow-Control-Allow-Origin': REACT_APP_API\n    },\n    body: JSON.stringify(body)\n  };\n  try {\n    const fetchResponse = await fetch(url, postRequest);\n    const data = await fetchResponse.json();\n    return data;\n  } catch (error) {\n    console.error(\"Une erreur est survenue : %s\", error);\n  }\n};\nexport const fetchDelete = async (url, name) => {\n  const deleteRequest = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'text/plain'\n    }\n  };\n  try {\n    const fetchResponse = await fetch(`${url}/${name}`, deleteRequest);\n    const data = await fetchResponse.json();\n    return data;\n  } catch (error) {\n    console.error(\"Une erreur est survenue : %s\", error);\n  }\n};\nexport const fetchPatch = async (url, id, body) => {\n  const patchRequest = {\n    method: 'PATCH',\n    headers: {\n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin': REACT_APP_API\n    },\n    body: JSON.stringify(body)\n  };\n  try {\n    const fetchResponse = await fetch(`${url}/${id}`, patchRequest);\n    const data = await fetchResponse.json();\n    return data;\n  } catch (error) {\n    console.error(\"Une erreur est survenue : %s\", error);\n  }\n};","map":{"version":3,"names":["REACT_APP_API","process","env","fetchJson","url","responseJson","fetch","credentials","mode","then","response","json","htmlResponse","fetchPost","body","postRequest","method","headers","JSON","stringify","fetchResponse","data","error","console","fetchDelete","name","deleteRequest","fetchPatch","id","patchRequest"],"sources":["A:/Cours/NodeJs/projet/projet/collab/front/src/components/fetch.js"],"sourcesContent":["const { REACT_APP_API } = process.env;\r\n\r\n/*\r\n    Méthodes de fetch\r\n*/\r\n\r\nexport const fetchJson = async(url) => {\r\n    let responseJson;\r\n\r\n    await fetch(url, { credentials: \"include\" , mode: \"cors\" })\r\n        .then(response => response.json())\r\n        .then(htmlResponse => responseJson = htmlResponse)\r\n\r\n    return responseJson;\r\n}\r\n\r\nexport const fetchPost = async(url, body) => {\r\n    const postRequest = {\r\n        method: 'POST',\r\n        credentials: \"include\",\r\n        mode: \"cors\",\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Allow-Control-Allow-Origin': REACT_APP_API\r\n        },\r\n        body: JSON.stringify(body)\r\n    }\r\n\r\n    try{\r\n        const fetchResponse = await fetch(url, postRequest);\r\n        const data = await fetchResponse.json();\r\n        return data;\r\n    }\r\n    catch(error){\r\n        console.error(\"Une erreur est survenue : %s\", error);\r\n    }\r\n}\r\n\r\nexport const fetchDelete = async(url, name) => {\r\n    const deleteRequest = {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'text/plain',\r\n        }\r\n    }\r\n\r\n    try{\r\n        const fetchResponse = await fetch(`${url}/${name}`, deleteRequest);\r\n        const data = await fetchResponse.json();\r\n        return data;\r\n    }\r\n    catch(error){\r\n        console.error(\"Une erreur est survenue : %s\", error);\r\n    }\r\n}\r\n\r\nexport const fetchPatch = async(url, id, body) => {\r\n    const patchRequest = {\r\n        method: 'PATCH',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Access-Control-Allow-Origin': REACT_APP_API\r\n        },\r\n        body: JSON.stringify(body)\r\n    }\r\n\r\n    try{\r\n        const fetchResponse = await fetch(`${url}/${id}`, patchRequest);\r\n        const data = await fetchResponse.json();\r\n        return data;\r\n    }\r\n    catch(error){\r\n        console.error(\"Une erreur est survenue : %s\", error);\r\n    }\r\n}"],"mappings":"AAAA,MAAM;EAAEA;AAAc,CAAC,GAAGC,OAAO,CAACC,GAAG;;AAErC;AACA;AACA;;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAMC,GAAG,IAAK;EACnC,IAAIC,YAAY;EAEhB,MAAMC,KAAK,CAACF,GAAG,EAAE;IAAEG,WAAW,EAAE,SAAS;IAAGC,IAAI,EAAE;EAAO,CAAC,CAAC,CACtDC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,YAAY,IAAIP,YAAY,GAAGO,YAAY,CAAC;EAEtD,OAAOP,YAAY;AACvB,CAAC;AAED,OAAO,MAAMQ,SAAS,GAAG,OAAMT,GAAG,EAAEU,IAAI,KAAK;EACzC,MAAMC,WAAW,GAAG;IAChBC,MAAM,EAAE,MAAM;IACdT,WAAW,EAAE,SAAS;IACtBC,IAAI,EAAE,MAAM;IACZS,OAAO,EAAE;MACL,cAAc,EAAE,kBAAkB;MAClC,4BAA4B,EAAEjB;IAClC,CAAC;IACDc,IAAI,EAAEI,IAAI,CAACC,SAAS,CAACL,IAAI;EAC7B,CAAC;EAED,IAAG;IACC,MAAMM,aAAa,GAAG,MAAMd,KAAK,CAACF,GAAG,EAAEW,WAAW,CAAC;IACnD,MAAMM,IAAI,GAAG,MAAMD,aAAa,CAACT,IAAI,EAAE;IACvC,OAAOU,IAAI;EACf,CAAC,CACD,OAAMC,KAAK,EAAC;IACRC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;EACxD;AACJ,CAAC;AAED,OAAO,MAAME,WAAW,GAAG,OAAMpB,GAAG,EAAEqB,IAAI,KAAK;EAC3C,MAAMC,aAAa,GAAG;IAClBV,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB;EACJ,CAAC;EAED,IAAG;IACC,MAAMG,aAAa,GAAG,MAAMd,KAAK,CAAE,GAAEF,GAAI,IAAGqB,IAAK,EAAC,EAAEC,aAAa,CAAC;IAClE,MAAML,IAAI,GAAG,MAAMD,aAAa,CAACT,IAAI,EAAE;IACvC,OAAOU,IAAI;EACf,CAAC,CACD,OAAMC,KAAK,EAAC;IACRC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;EACxD;AACJ,CAAC;AAED,OAAO,MAAMK,UAAU,GAAG,OAAMvB,GAAG,EAAEwB,EAAE,EAAEd,IAAI,KAAK;EAC9C,MAAMe,YAAY,GAAG;IACjBb,MAAM,EAAE,OAAO;IACfC,OAAO,EAAE;MACL,cAAc,EAAE,kBAAkB;MAClC,6BAA6B,EAAEjB;IACnC,CAAC;IACDc,IAAI,EAAEI,IAAI,CAACC,SAAS,CAACL,IAAI;EAC7B,CAAC;EAED,IAAG;IACC,MAAMM,aAAa,GAAG,MAAMd,KAAK,CAAE,GAAEF,GAAI,IAAGwB,EAAG,EAAC,EAAEC,YAAY,CAAC;IAC/D,MAAMR,IAAI,GAAG,MAAMD,aAAa,CAACT,IAAI,EAAE;IACvC,OAAOU,IAAI;EACf,CAAC,CACD,OAAMC,KAAK,EAAC;IACRC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;EACxD;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}